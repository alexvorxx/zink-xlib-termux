.radeonsi-raven-test:amd64:
  extends:
    - .radeonsi-rules
  variables:
    BOOT_METHOD: depthcharge
    DRIVER_NAME: radeonsi
    DTB: ""
    GPU_VERSION: radeonsi-raven
    HWCI_FREQ_MAX: "true"
    HWCI_KERNEL_MODULES: amdgpu
    KERNEL_IMAGE_TYPE: ""
    VK_DRIVER: radeon
    DEVICE_TYPE: lenovo-TPad-C13-Yoga-zork
    RUNNER_TAG: mesa-ci-x86-64-lava-lenovo-TPad-C13-Yoga-zork

radeonsi-raven-skqp:amd64:
  extends:
    - .lava-test:amd64
    - .radeonsi-raven-test:amd64
    - .radeonsi+radv-rules # SKQP VK needs to be triggered for any Vulkan changes
    - .skqp-test
  variables:
    # Possible skqp backends: gl, gles, unitTest and vk
    SKQP_BACKENDS: gl gles vk unitTest  # space separated values

.radeonsi-stoney-test:amd64:
  extends:
    - .radeonsi-rules
  variables:
    DEVICE_TYPE: hp-11A-G6-EE-grunt
    DTB: ""
    GPU_VERSION: radeonsi-stoney
    BOOT_METHOD: depthcharge
    KERNEL_IMAGE_TYPE: ""
    HWCI_KERNEL_MODULES: amdgpu
    DRIVER_NAME: radeonsi
    FDO_CI_CONCURRENT: 4
    DEQP_EXPECTED_RENDERER: STONEY
    HWCI_FREQ_MAX: "true"
    RUNNER_TAG: mesa-ci-x86-64-lava-hp-11A-G6-EE-grunt

radeonsi-stoney-gl:amd64:
  extends:
    - .lava-test:amd64
    - .radeonsi-stoney-test:amd64
  parallel: 5
  variables:
    DEQP_SUITE: radeonsi-stoney

radeonsi-stoney-traces:amd64:
  extends:
    - .lava-piglit-traces:amd64
    - .radeonsi-stoney-test:amd64
  variables:
    EGL_PLATFORM: surfaceless
    PIGLIT_REPLAY_DESCRIPTION_FILE: "/install/traces-radeonsi.yml"
    PIGLIT_REPLAY_EXTRA_ARGS: --keep-image
    RUNNER_TAG: mesa-ci-x86-64-lava-hp-11A-G6-EE-grunt

radeonsi-raven-piglit-gl:amd64:
  extends:
    - .lava-piglit:amd64
    - .radeonsi-raven-test:amd64
  variables:
    PIGLIT_PLATFORM: mixed_glx_egl
    PIGLIT_PROFILES: quick_gl
    HWCI_START_XORG: 1

radeonsi-raven-va:amd64:
  extends:
    - .lava-test:amd64
    - .radeonsi-raven-test:amd64
    - .radeonsi-vaapi-rules
  variables:
    HWCI_TEST_SCRIPT: "/install/gtest-runner.sh"
    # While the tests don't need Xorg, it's an easy way to keep DRM open so we don't
    # spend all our time in drm_lastclose()'s modesetting.
    HWCI_START_XORG: 1
    GTEST: test_va_api
    # The big 10-surface 10k allocations oomkill us at around 2.5G of GPU memory
    # allocated if we run at the normal 4 threads.
    # https://github.com/intel/libva-utils/issues/248
    FDO_CI_CONCURRENT: 1
    # A whole run would be about 25 minutes currently.  Fixing
    # https://github.com/intel/libva-utils/issues/247 and
    # https://github.com/google/googletest/issues/3614 would probably help.
    GTEST_FRACTION: 2
